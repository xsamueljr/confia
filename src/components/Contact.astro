---
import { getLangFromUrl, useTranslations } from '../utils/i18n';

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);
---

<section id="contact" class="contact">
  <div class="container">
    <div class="contact-header">
      <h2 class="section-title">{t('contact.title')}</h2>
      <p class="section-subtitle">{t('contact.subtitle')}</p>
    </div>

    <div class="contact-content">
      <form id="contactForm" class="contact-form">
        <div class="form-group">
          <label for="name" class="form-label">{t('contact.form.name')}</label>
          <input
            type="text"
            id="name"
            name="name"
            class="form-input"
            required
            minlength="2"
          />
          <span class="error-message" id="nameError"></span>
        </div>

        <div class="form-group">
          <label for="email" class="form-label">{t('contact.form.email')}</label>
          <input
            type="email"
            id="email"
            name="email"
            class="form-input"
            required
          />
          <span class="error-message" id="emailError"></span>
        </div>

        <div class="form-group">
          <label for="message" class="form-label">{t('contact.form.message')}</label>
          <textarea
            id="message"
            name="message"
            class="form-input form-textarea"
            required
            minlength="10"
            rows="5"
          ></textarea>
          <span class="error-message" id="messageError"></span>
        </div>

        <button type="submit" class="btn btn-primary contact-submit">
          {t('contact.form.submit')}
        </button>

        <div id="formStatus" class="form-status"></div>
      </form>

      <div class="contact-info">
        <div class="contact-card">
          <div class="contact-icon">
            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
              <path d="M4 4h16c1.1 0 2 .9 2 2v12c0 1.1-.9 2-2 2H4c-1.1 0-2-.9-2-2V6c0-1.1.9-2 2-2z"/>
              <polyline points="22,6 12,13 2,6"/>
            </svg>
          </div>
          <h3 class="contact-method-title">{t('contact.email.title')}</h3>
          <p class="contact-method-text">
            <a href="mailto:soporte.confiaofficial@gmail.com" class="contact-link">
              soporte.confiaofficial@gmail.com
            </a>
          </p>
        </div>

        <div class="contact-card">
          <div class="contact-icon">
            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
              <path d="M23 3a10.9 10.9 0 0 1-3.14 1.53 4.48 4.48 0 0 0-7.86 3v1A10.66 10.66 0 0 1 3 4s-4 9 5 13a11.64 11.64 0 0 1-7 2c9 5 20 0 20-11.5a4.5 4.5 0 0 0-.08-.83A7.72 7.72 0 0 0 23 3z"/>
            </svg>
          </div>
          <h3 class="contact-method-title">{t('contact.social.title')}</h3>
          <div class="social-links">
            <a href="https://www.instagram.com/confia_official_/" target="_blank" rel="noopener noreferrer" class="social-link">
              <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                <rect x="2" y="2" width="20" height="20" rx="5" ry="5"/>
                <path d="M16 11.37A4 4 0 1 1 12.63 8 4 4 0 0 1 16 11.37z"/>
                <line x1="17.5" y1="6.5" x2="17.51" y2="6.5"/>
              </svg>
            </a>
            <a href="https://www.tiktok.com/@confia_official" target="_blank" rel="noopener noreferrer" class="social-link">
              <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                <path d="M9 12a4 4 0 1 0 4 4V4a5 5 0 0 0 5 5"/>
              </svg>
            </a>
            <a href="https://x.com/ConfIA_Oficial" target="_blank" rel="noopener noreferrer" class="social-link">
              <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                <path d="M23 3a10.9 10.9 0 0 1-3.14 1.53 4.48 4.48 0 0 0-7.86 3v1A10.66 10.66 0 0 1 3 4s-4 9 5 13a11.64 11.64 0 0 1-7 2c9 5 20 0 20-11.5a4.5 4.5 0 0 0-.08-.83A7.72 7.72 0 0 0 23 3z"/>
              </svg>
            </a>
          </div>
        </div>
      </div>
    </div>
  </div>
</section>

<script>
  const form = document.getElementById('contactForm') as HTMLFormElement;
  const formStatus = document.getElementById('formStatus') as HTMLDivElement;
  const nameError = document.getElementById('nameError') as HTMLSpanElement;
  const emailError = document.getElementById('emailError') as HTMLSpanElement;
  const messageError = document.getElementById('messageError') as HTMLSpanElement;

  const validateEmail = (email: string): boolean => {
    const re = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
    return re.test(email);
  };

  const showError = (element: HTMLSpanElement, message: string) => {
    element.textContent = message;
    element.style.display = 'block';
  };

  const clearError = (element: HTMLSpanElement) => {
    element.textContent = '';
    element.style.display = 'none';
  };

  const clearForm = () => {
    form.reset();
    clearError(nameError);
    clearError(emailError);
    clearError(messageError);
  };

  form.addEventListener('submit', async (e) => {
    e.preventDefault();
    
    const formData = new FormData(form);
    const name = formData.get('name') as string;
    const email = formData.get('email') as string;
    const message = formData.get('message') as string;
    
    let isValid = true;

    // Validate name
    if (name.length < 2) {
      showError(nameError, 'Name must be at least 2 characters long');
      isValid = false;
    } else {
      clearError(nameError);
    }

    // Validate email
    if (!validateEmail(email)) {
      showError(emailError, 'Please enter a valid email address');
      isValid = false;
    } else {
      clearError(emailError);
    }

    // Validate message
    if (message.length < 10) {
      showError(messageError, 'Message must be at least 10 characters long');
      isValid = false;
    } else {
      clearError(messageError);
    }

    if (!isValid) return;

    try {
      formStatus.className = 'form-status info';
      formStatus.textContent = 'Sending message...';

      const response = await fetch('https://elsamueldev-confia-form-backend.hf.space/submit', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({ name, email, message }),
      });

      if (!response.ok) {
        throw new Error('Failed to send message');
      }

      formStatus.className = 'form-status success';
      formStatus.textContent = 'Message sent successfully!';
      clearForm();

      setTimeout(() => {
        formStatus.textContent = '';
        formStatus.className = 'form-status';
      }, 5000);

    } catch (error) {
      formStatus.className = 'form-status error';
      formStatus.textContent = 'Failed to send message. Please try again later.';
    }
  });
</script>

<style>
  .contact {
    padding: var(--spacing-xl) 0;
    background-color: var(--color-secondary-100);
  }

  .contact-header {
    text-align: center;
    margin-bottom: var(--spacing-xl);
  }

  .section-title {
    font-size: 2.5rem;
    color: var(--color-heading);
    margin-bottom: var(--spacing-sm);
  }

  .section-subtitle {
    font-size: 1.25rem;
    color: var(--color-text);
    max-width: 600px;
    margin: 0 auto;
  }

  .contact-content {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: var(--spacing-xl);
    max-width: 1000px;
    margin: 0 auto;
  }

  .contact-form {
    background: white;
    padding: var(--spacing-lg);
    border-radius: 1rem;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.05);
  }

  .form-textarea {
    resize: vertical;
    min-height: 120px;
  }

  .contact-submit {
    width: 100%;
    margin-top: var(--spacing-md);
  }

  .form-status {
    margin-top: var(--spacing-md);
    padding: var(--spacing-sm);
    border-radius: 0.375rem;
    text-align: center;
    display: none;
  }

  .form-status:not(:empty) {
    display: block;
  }

  .form-status.info {
    background-color: var(--color-secondary-100);
    color: var(--color-text);
  }

  .form-status.success {
    background-color: #c6f6d5;
    color: #2f855a;
  }

  .form-status.error {
    background-color: #fed7d7;
    color: #c53030;
  }

  .contact-info {
    display: flex;
    flex-direction: column;
    gap: var(--spacing-lg);
  }

  .contact-card {
    background: white;
    padding: var(--spacing-lg);
    border-radius: 1rem;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.05);
  }

  .contact-icon {
    width: 48px;
    height: 48px;
    display: flex;
    align-items: center;
    justify-content: center;
    background-color: var(--color-secondary-100);
    border-radius: 0.75rem;
    margin-bottom: var(--spacing-md);
    color: var(--color-primary);
  }

  .contact-method-title {
    font-size: 1.25rem;
    color: var(--color-heading);
    margin-bottom: var(--spacing-sm);
  }

  .contact-method-text {
    color: var(--color-text);
  }

  .contact-link {
    color: var(--color-primary);
    text-decoration: none;
    transition: color 0.2s ease;
  }

  .contact-link:hover {
    color: #1b6b7a;
  }

  .social-links {
    display: flex;
    gap: var(--spacing-md);
    margin-top: var(--spacing-sm);
  }

  .social-link {
    color: var(--color-text);
    transition: color 0.2s ease;
  }

  .social-link:hover {
    color: var(--color-primary);
  }

  @media (max-width: 768px) {
    .contact-content {
      grid-template-columns: 1fr;
      gap: var(--spacing-lg);
    }

    .section-title {
      font-size: 2rem;
    }

    .section-subtitle {
      font-size: 1.125rem;
    }
  }
</style>