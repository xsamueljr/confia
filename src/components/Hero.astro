---
import { getLangFromUrl, useTranslations } from '../utils/i18n';

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);
---

<section class="hero">
  <div class="container hero-container">
    <div class="hero-content">
      <h1 class="hero-title">
        {t('hero.title')} <span class="highlight">{t('hero.title.highlight')}</span>
      </h1>
      <p class="hero-subtitle">
        {t('hero.subtitle')}
      </p>
      <div class="hero-cta">
        <a href="#download" class="btn btn-primary">{t('hero.cta')}</a>
      </div>
    </div>
    <div class="hero-image">
      <div class="hero-shape"></div>
    </div>
  </div>
</section>

<style>
  .hero {
    padding-top: calc(4rem + var(--spacing-xl));
    background: linear-gradient(
      to bottom right,
      var(--color-secondary-100),
      var(--color-background)
    );
  }

  .hero-container {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: var(--spacing-xl);
    align-items: center;
    min-height: 80vh;
  }

  .hero-title {
    font-size: 3.5rem;
    line-height: 1.2;
    color: var(--color-heading);
    margin-bottom: var(--spacing-md);
  }

  .highlight {
    color: var(--color-primary);
  }

  .hero-subtitle {
    font-size: 1.25rem;
    color: var(--color-text);
    margin-bottom: var(--spacing-lg);
    max-width: 600px;
  }

  .hero-image {
    position: relative;
    display: flex;
    justify-content: center;
    align-items: center;
  }

  .hero-shape {
    width: 100%;
    aspect-ratio: 1;
    background: linear-gradient(
      135deg,
      var(--color-primary),
      var(--color-secondary-200)
    );
    border-radius: 30% 70% 70% 30% / 30% 30% 70% 70%;
    animation: morphShape 15s ease-in-out infinite;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .hero-logo {
    width: 50%;
    height: 50%;
    color: white;
    animation: float 6s ease-in-out infinite;
  }

  @keyframes float {
    0% {
      transform: translateY(0px);
    }
    50% {
      transform: translateY(-20px);
    }
    100% {
      transform: translateY(0px);
    }
  }

  @keyframes morphShape {
    0% {
      border-radius: 30% 70% 70% 30% / 30% 30% 70% 70%;
    }
    50% {
      border-radius: 70% 30% 30% 70% / 70% 70% 30% 30%;
    }
    100% {
      border-radius: 30% 70% 70% 30% / 30% 30% 70% 70%;
    }
  }

  @media (max-width: 768px) {
    .hero-container {
      grid-template-columns: 1fr;
      text-align: center;
    }

    .hero-title {
      font-size: 2.5rem;
    }

    .hero-subtitle {
      font-size: 1.125rem;
      margin-left: auto;
      margin-right: auto;
    }

    .hero-image {
      order: -1;
    }

    .hero-shape {
      width: 80%;
    }

    .hero-logo {
      width: 40%;
      height: 40%;
    }
  }
</style>